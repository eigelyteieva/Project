#include <iostream>
#include <iomanip>
#include <string>
#include <bits/stdc++.h>
#include<limits>
using std::cout;
using std::cin;
using std::endl;
using std::string;
using std::setw;
using std::istream;
using std::sort;
using std::vector;

using namespace std;

struct duomenys{
    string vardas, pavarde;
    vector<float> pazymiai;
    float egzamino_rez;
    float galutinis_egz;

};
bool isNumber(const string& str)
{
    for (char const &c : str) {
        if (std::isdigit(c) == 0) return false;
    }
    return true;
}
int sveikoSkaiciausPatikrinimas()
{
    string laikinas;
    int temp;
    while(1){
        cin>>laikinas;
        if(isNumber(laikinas) == true){
            temp = stoi(laikinas);
            if(((temp >= 0) && (temp <= 10)))
            break;
            else cout<<"bloga ivestis"<<endl<<"Veskite dar karta: ";
        }
        else cout<<"bloga ivestis"<<endl<<"Veskite dar karta: ";
    }
    return temp;
}
int studentuskaiciaustikrinimas()
{
    string laikinas;
    int temp;
    while(1){
        cin>>laikinas;
        if(isNumber(laikinas) == true){
            temp = stoi(laikinas);
            if(((temp >= 0) && (temp <= 100)))
            break;
            else cout<<"bloga ivestis"<<endl<<"Veskite dar karta: ";
        }
        else cout<<"bloga ivestis"<<endl<<"Veskite dar karta: ";
    }
    return temp;
}
float mediana(vector<float> pazymiai)
{
    sort (pazymiai.begin(), pazymiai.end());
    if (pazymiai.size() % 2 != 0)
    {
        return pazymiai[pazymiai.size()/2];
    }
    else {
        return (double)(pazymiai[(pazymiai.size() - 1)/2]+pazymiai[pazymiai.size()/2])/2.0;
    }
}
void duom_automatinis (duomenys A[],int n,string &pasirinkimas)
{
    srand(time(NULL));
    float suma, temp;
    for (int e=0; e<n; e++)
    {   suma = 0;
        cout<<"Iveskite "<<e+1<<"-o varda ir pavarde: ";
        cin>>A[e].vardas>>A[e].pavarde;
        for(int i= 0; i<rand() % 10 + 1; i++)
        {
            temp = rand() % 10 + 1;
            A[e].pazymiai.push_back(temp);
            suma+= temp;
        }
        A[e].egzamino_rez = rand() % 10 + 1;
        A[e].galutinis_egz =0.4*(suma/A[e].pazymiai.size())+0.6*A[e].egzamino_rez;
    }
    cout<<"Jeigu norite matyti galutini egzamino pazymi spauskite G, jeigu mediana - M"<<endl;
    cin>>pasirinkimas;
    if ((pasirinkimas != "G") && (pasirinkimas != "g") && (pasirinkimas != "M") && (pasirinkimas != "m") )
    {
        cout<<"Ivedete netinkama simboli"<<endl;
        cout<<"Jeigu norite matyti galutini egzamino pazymi spauskite G, jeigu mediana - M";
        cin>>pasirinkimas;
    }
}
void duom_rankinis (duomenys *A, int &n, string &pasirinkimas)
{
    for(int i=0; i<n; i++)
    {
        cout<<"Iveskite "<<i+1<<"-o varda ir pavarde: ";
        cin>>A[i].vardas>>A[i].pavarde;
        float suma=0;
        int pazymiu_skaicius = 0;
        cout<<"Iveskite "<<i+1<<"studento pazymius, kai baigsite vesti - iveskite 0"<<endl;
        float temp=1.99999;
        cout<<"1 pazymis: ";
        while ((temp = sveikoSkaiciausPatikrinimas()) && (temp!=0))
        {
            cout<< pazymiu_skaicius + 2 <<" pazymis: ";
            A[i].pazymiai.push_back(temp);
            suma+=temp;
            pazymiu_skaicius++;
        }
        cout<<"Iveskite "<<i+1<<" studento egzamino rezultata: ";
        A[i].egzamino_rez=sveikoSkaiciausPatikrinimas();
        A[i].galutinis_egz = 0.4*(suma/(A[i].pazymiai.size()))+0.6*A[i].egzamino_rez;

    }
    cout<<"Jeigu norite matyti galutini egzamino pazymi spauskite G, jeigu mediana - M"<<endl;
    cin>>pasirinkimas;
    if ((pasirinkimas != "G") && (pasirinkimas != "g") && (pasirinkimas != "M") && (pasirinkimas != "m") )
    {
        cout<<"Ivedete netinkama simboli"<<endl;
        cout<<"Pabandykite dar karta: ";
        cin>>pasirinkimas;
    }
}

void spausdinimas (duomenys A[], int n, string pasirinkimas)
{
    cout<<"\n\n";
    cout<<setw(20)<<std::left<<"Vardas"<<setw(20)<<std::left<<"Pavarde";
    if (pasirinkimas == "G" || pasirinkimas == "g")
    {cout<<setw(20)<<std::left<<"Galutinis(egz.)\n";}
    else{cout<<setw(20)<<std::left<<"Mediana\n";}

    cout<<"-------------------------------------------------------\n";

    for (int i=0; i<n; i++)
    {cout<<setw(20)<<A[i].vardas<<setw(20)<<A[i].pavarde;
        if (pasirinkimas == "G" || pasirinkimas == "g")
        {cout<<setw(20)<<std::setprecision(2)<<A[i].galutinis_egz<<endl;}
    else{cout<<setw(20)<<mediana(A[i].pazymiai)<<endl;}
    }
}
int main()
{
    string pasirinkimas, duom_pasirinkimas;
    int n;
    cout<<"Iveskite studentu skaiciu: "<<endl;
    n = studentuskaiciaustikrinimas();
    duomenys *A = new duomenys[25];

    cout<<"Jeigu norite duomenis ivesti rankiniu butu spauskite R,jeigu norite, kad duomenys sugeneruotu atsitiktinai spauskite A";
    cin>>duom_pasirinkimas;

    if ((duom_pasirinkimas != "R") && (duom_pasirinkimas != "r") && (duom_pasirinkimas != "A") && (duom_pasirinkimas != "a") )
    {
        cout<<"Ivedete netinkama simboli"<<endl;
        cout<<"Jeigu norite duomenis ivesti rankiniu butu spauskite R,jeigu norite, kad duomenys sugeneruotu atsitiktinai spauskite A";
        cin>>duom_pasirinkimas;
    }

    if (duom_pasirinkimas == "R" || duom_pasirinkimas == "r")
    {duom_rankinis(A,n,pasirinkimas);}
    else
    {duom_automatinis(A,n,pasirinkimas);}
    spausdinimas(A,n,pasirinkimas);
    return 0;

}
